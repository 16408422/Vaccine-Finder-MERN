/**
 * Created by chenlin on 2017/10/17 0017.
 */
import React from 'react';
import DatePickerItem from './DatePikerItem';
import { convertDate, nextDate,shallowEqual} from './util';
export default class DatePickerGroup extends React.Component {
    static defaultProps={
        btns:[
            {
                btnName:"取消"
            },
            {
                btnName:"确定"
            },
        ]
    }
    constructor(props) {
        super(props);
        this.state = {
            value: nextDate(this.props.value),
        };
    }
    shouldComponentUpdate(nextProps, nextState) {
        const date = nextDate(nextState.value);
        return date.getTime() !== this.state.value.getTime() ||!shallowEqual(this.props, nextProps) || !shallowEqual(this.state, nextState)
    }
    componentWillReceiveProps(nextProps) {
        const date = nextDate(nextProps.value);
        if (date.getTime() !== this.state.value.getTime()) {
            this.setState({ value: date });
        }
    }
    handleFinishBtnClick=()=>{
        this.props.onSelect( convertDate(this.state.value,"YYYY-MM-DD"));
    }
    handleDateSelect=(value)=>{
        this.setState({ value });
    }
    handleClick=(i)=>{
        if(i==0){
            this.props.onCancel&&this.props.onCancel()
        }
        else{
            this.handleFinishBtnClick()
        }
    }
    render() {
        const { min,max,dateFormat,btns} = this.props;
        const value = this.state.value;
        let typeName=["Year","Month","Date"];
        return (
            <div
                className="datepicker">
                <div className="datepicker-header">{convertDate(value, 'YYYY/MM/DD')}</div>
                <div className="datepicker-navbar">
                    {
                        btns.map((btn,i)=>{
                            return <a key={i} href="javascript:void (0)"
                                      className="datepicker-navbar-btn"
                                      onClick={this.handleClick.bind(this,i)}>
                                {btn.btnName}
                            </a>
                        })
                    }
                </div>
                <div className="datepicker-content">
                    {
                        dateFormat.map((date,i)=>{
                            return <DatePickerItem
                                key={i}
                                value={value}
                                min={min}
                                max={max}
                                typeName={typeName[i]}
                                format={date}
                                onSelect={this.handleDateSelect} />
                        })
                    }
                </div>
            </div>
        );
    }
}